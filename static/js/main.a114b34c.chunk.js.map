{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","ALPABET","sort","a","b","localeCompare","LENGTH","length","reverse","App","React","useState","NONE","appState","setAppState","className","type","onClick","prevState","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAiBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAcK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAERC,EAAY,YAAOH,GAEvB,OAAQC,GACN,KAAKJ,EAASO,QACZD,EAAeA,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAC3D,MAEF,KAAKV,EAASY,OACZN,EAAeA,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEI,OAASH,EAAEG,UAO5D,OAAIR,EACKC,EAAaQ,UAGfR,G,SAlCJN,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAqCE,IAAMe,EAAgB,WAC3B,MAAgCC,IAAMC,SAAS,CAC7Cb,SAAUJ,EAASkB,KACnBb,YAAY,IAFd,mBAAOc,EAAP,KAAiBC,EAAjB,KAuCA,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWF,EAASf,WAAaJ,EAASO,QACtC,iBACA,0BACJgB,QA1CkB,WACxBH,GAAY,SAAAI,GACV,OAAO,2BACFA,GADL,IAEEpB,SAAUJ,EAASO,cAiCnB,iCAUA,wBACEe,KAAK,SACLD,UAAWF,EAASf,WAAaJ,EAASY,OACtC,oBACA,6BACJW,QA3CiB,WACvBH,GAAY,SAAAI,GACV,OAAO,2BACFA,GADL,IAEEpB,SAAUJ,EAASY,aAkCnB,4BAUA,wBACEU,KAAK,SACLD,UAAWF,EAASd,WAChB,oBACA,6BACJkB,QA5Cc,WACpBH,GAAY,SAACI,GACX,OAAO,2BACFA,GADL,IAEEnB,YAAamB,EAAUnB,iBAmCvB,sBAUEc,EAASd,YAAcc,EAASf,WAAaJ,EAASkB,OACtD,wBACEI,KAAK,SACLD,UAAU,4BACVE,QA5CU,WAClBH,EAAY,CACVf,YAAY,EACZD,SAAUJ,EAASkB,QAsCf,sBAUJ,6BACE,6BACGhB,EACCD,EACAkB,GACAM,KAAI,SAAAC,GAAI,OACR,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,cC9InBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a114b34c.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  let visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPABET:\n      visibleGoods = visibleGoods.sort((a, b) => a.localeCompare(b));\n      break;\n\n    case SortType.LENGTH:\n      visibleGoods = visibleGoods.sort((a, b) => a.length - b.length);\n      break;\n\n    default:\n      //\n  }\n\n  if (isReversed) {\n    return visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [appState, setAppState] = React.useState({\n    sortType: SortType.NONE,\n    isReversed: false,\n  });\n\n  const handelSortAlphbet = () => {\n    setAppState(prevState => {\n      return {\n        ...prevState,\n        sortType: SortType.ALPABET,\n      };\n    });\n  };\n\n  const handelSortLength = () => {\n    setAppState(prevState => {\n      return {\n        ...prevState,\n        sortType: SortType.LENGTH,\n      };\n    });\n  };\n\n  const handelReverse = () => {\n    setAppState((prevState) => {\n      return {\n        ...prevState,\n        isReversed: !prevState.isReversed,\n      };\n    });\n  };\n\n  const handelReset = () => {\n    setAppState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={appState.sortType === SortType.ALPABET\n            ? 'button is-info'\n            : 'button is-info is-light'}\n          onClick={handelSortAlphbet}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={appState.sortType === SortType.LENGTH\n            ? 'button is-success'\n            : 'button is-success is-light'}\n          onClick={handelSortLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={appState.isReversed\n            ? 'button is-warning'\n            : 'button is-warning is-light'}\n          onClick={handelReverse}\n        >\n          Reverse\n        </button>\n\n        {(appState.isReversed || appState.sortType !== SortType.NONE) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={handelReset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          {getReorderedGoods(\n            goodsFromServer,\n            appState,\n          ).map(good => (\n            <li\n              key={good}\n              data-cy=\"Good\"\n            >\n              {good}\n            </li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}