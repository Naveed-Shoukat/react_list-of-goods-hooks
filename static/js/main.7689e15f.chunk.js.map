{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","React","useState","sortType","NONE","isReversed","appState","setAppState","isReset","reorderGoods","useMemo","goods","visibleGoods","ALPABET","sort","a","b","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","classNames","onClick","prevState","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0FAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAqCE,IAAME,EAAgB,WAC3B,MAAgCC,IAAMC,SAAS,CAC7CC,SAAUL,EAASM,KACnBC,YAAY,IAFd,mBAAOC,EAAP,KAAiBC,EAAjB,KA+CMC,EAAUF,EAASD,YAAcC,EAASH,WAAaL,EAASM,KAEhEK,EAAeC,mBACnB,WACE,OA9EC,SACLC,EADK,GAGJ,IADCR,EACF,EADEA,SAAUE,EACZ,EADYA,WAERO,EAAY,YAAOD,GAEvB,OAAQR,GACN,KAAKL,EAASe,QACZD,EAAeA,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAC3D,MAEF,KAAKlB,EAASoB,OACZN,EAAeA,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEI,OAASH,EAAEG,UACxD,MAEF,QACE,OAAOd,EAAaO,EAAaQ,UAAYR,EAGjD,OAAIP,EACKO,EAAaQ,UAGfR,EAuDIS,CACLtB,EACAO,KAGJ,CAACP,EAAiBO,IAGpB,OACE,sBAAKgB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CACE,WAAYlB,EAASH,WAAaL,EAASe,UAG/CY,QAjEkB,WACxBlB,GAAY,SAAAmB,GACV,OAAIA,EAAUvB,WAAaL,EAASe,QAC3B,2BACFa,GADL,IAEEvB,SAAUL,EAASe,UAIhBa,MAgDL,iCAaA,wBACEH,KAAK,SACLD,UAAWE,IACT,oBACA,CACE,WAAYlB,EAASH,WAAaL,EAASoB,SAG/CO,QAjEiB,WACvBlB,GAAY,SAAAmB,GACV,OAAIA,EAAUvB,WAAaL,EAASoB,OAC3B,2BACFQ,GADL,IAEEvB,SAAUL,EAASoB,SAIhBQ,MAgDL,4BAaA,wBACEH,KAAK,SACLD,UAAWE,IACT,oBACA,CACE,YAAalB,EAASD,aAG1BoB,QAjEc,WACpBlB,GAAY,SAACmB,GACX,OAAO,2BACFA,GADL,IAEErB,YAAaqB,EAAUrB,iBAqDvB,qBAaCG,GACC,wBACEe,KAAK,SACLD,UAAU,4BACVG,QAjEU,WAClBlB,EAAY,CACVF,YAAY,EACZF,SAAUL,EAASM,QA2Df,sBAUJ,6BACE,6BACGK,EAAakB,KAAI,SAAAC,GAAI,OACpB,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,cCzKnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.7689e15f.chunk.js","sourcesContent":["import React, { useMemo } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  let visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPABET:\n      visibleGoods = visibleGoods.sort((a, b) => a.localeCompare(b));\n      break;\n\n    case SortType.LENGTH:\n      visibleGoods = visibleGoods.sort((a, b) => a.length - b.length);\n      break;\n\n    default:\n      return isReversed ? visibleGoods.reverse() : visibleGoods;\n  }\n\n  if (isReversed) {\n    return visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [appState, setAppState] = React.useState({\n    sortType: SortType.NONE,\n    isReversed: false,\n  });\n\n  const handelSortAlphbet = () => {\n    setAppState(prevState => {\n      if (prevState.sortType !== SortType.ALPABET) {\n        return {\n          ...prevState,\n          sortType: SortType.ALPABET,\n        };\n      }\n\n      return prevState;\n    });\n  };\n\n  const handelSortLength = () => {\n    setAppState(prevState => {\n      if (prevState.sortType !== SortType.LENGTH) {\n        return {\n          ...prevState,\n          sortType: SortType.LENGTH,\n        };\n      }\n\n      return prevState;\n    });\n  };\n\n  const handelReverse = () => {\n    setAppState((prevState) => {\n      return {\n        ...prevState,\n        isReversed: !prevState.isReversed,\n      };\n    });\n  };\n\n  const handelReset = () => {\n    setAppState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  const isReset = appState.isReversed || appState.sortType !== SortType.NONE;\n\n  const reorderGoods = useMemo(\n    () => {\n      return getReorderedGoods(\n        goodsFromServer,\n        appState,\n      );\n    },\n    [goodsFromServer, appState],\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-info',\n            {\n              'is-light': appState.sortType !== SortType.ALPABET,\n            },\n          )}\n          onClick={handelSortAlphbet}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-success',\n            {\n              'is-light': appState.sortType !== SortType.LENGTH,\n            },\n          )}\n          onClick={handelSortLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-warning',\n            {\n              'is-light': !appState.isReversed,\n            },\n          )}\n          onClick={handelReverse}\n        >\n          Reverse\n        </button>\n\n        {isReset && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={handelReset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          {reorderGoods.map(good => (\n            <li\n              key={good}\n              data-cy=\"Good\"\n            >\n              {good}\n            </li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}